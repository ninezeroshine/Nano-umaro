import { ErrorType, type ErrorAnalysisResult } from '../types/errors';

/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ—à–∏–±–∫—É –æ—Ç Vertex AI –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –µ—ë —Ç–∏–ø
 */
export function analyzeVertexAIError(error: any, requestCount?: number): ErrorAnalysisResult {
  const status = error?.status ?? error?.response?.status ?? 500;
  const originalMessage = error?.responseJson?.error?.message || error?.message || 'Unknown error';
  const errorCode = error?.responseJson?.error?.code;
  const errorType = error?.responseJson?.error?.type;
  
  // –ü—Ä–∏–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
  const msgLower = String(originalMessage).toLowerCase();
  
  // 1. –û—à–∏–±–∫–∏ —Ü–µ–Ω–∑—É—Ä—ã/–º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  if (isCensorshipError(status, msgLower, errorCode, errorType)) {
    return {
      errorType: ErrorType.CONTENT_CENSORSHIP,
      userMessage: 'üö´ –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –ø—Ä–æ—à—ë–ª –º–æ–¥–µ—Ä–∞—Ü–∏—é Vertex AI. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–º–ø—Ç.',
      suggestions: [
        '–ò–∑–º–µ–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫—É –ø—Ä–æ–º–ø—Ç–∞',
        '–£–±–µ—Ä–∏—Ç–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞',
        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±–æ–ª–µ–µ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ'
      ],
      retryable: false,
      originalStatus: status,
      originalMessage
    };
  }
  
  // 2. –û—à–∏–±–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ API –¥–æ—Å—Ç—É–ø–∞
  if (status === 401 || status === 403) {
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è CONSUMER_INVALID - —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ API –Ω–µ –≤–∫–ª—é—á–µ–Ω
    if (msgLower.includes('consumer_invalid') || msgLower.includes('permission denied')) {
      return {
        errorType: ErrorType.AUTH_ERROR,
        userMessage: 'üîë Vertex AI API –Ω–µ –≤–∫–ª—é—á–µ–Ω –≤ –≤–∞—à–µ–º Google Cloud –ø—Ä–æ–µ–∫—Ç–µ.',
        suggestions: [
          '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Google Cloud Console ‚Üí APIs & Services ‚Üí Library',
          '–ù–∞–π–¥–∏—Ç–µ "Vertex AI API" –∏ –Ω–∞–∂–º–∏—Ç–µ "Enable"',
          '–ü–æ–¥–æ–∂–¥–∏—Ç–µ 2-3 –º–∏–Ω—É—Ç—ã –ø–æ—Å–ª–µ –≤–∫–ª—é—á–µ–Ω–∏—è API',
          '–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –ø—Ä–æ–µ–∫—Ç–∞ –≤–∫–ª—é—á–µ–Ω –±–∏–ª–ª–∏–Ω–≥'
        ],
        retryable: false,
        originalStatus: status,
        originalMessage
      };
    }
    
    return {
      errorType: ErrorType.AUTH_ERROR,
      userMessage: 'üîë –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π Vertex AI.',
      suggestions: [
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª —Å –∫–ª—é—á–∞–º–∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞',
        '–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –µ—Å—Ç—å —Ä–æ–ª—å "Vertex AI User"',
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –≤ Google Cloud'
      ],
      retryable: false,
      originalStatus: status,
      originalMessage
    };
  }
  
  // 3. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –∏–ª–∏ –∫–≤–æ—Ç
  if (status === 402 || msgLower.includes('insufficient') || msgLower.includes('credits') || msgLower.includes('quota')) {
    return {
      errorType: ErrorType.INSUFFICIENT_CREDITS,
      userMessage: 'üí≥ –ü—Ä–µ–≤—ã—à–µ–Ω–∞ –∫–≤–æ—Ç–∞ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –≤ Google Cloud.',
      suggestions: [
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∏–ª–ª–∏–Ω–≥ –≤ Google Cloud Console',
        '–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω—ã –∫–≤–æ—Ç—ã Vertex AI',
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏–º–∏—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è'
      ],
      retryable: false,
      originalStatus: status,
      originalMessage
    };
  }
  
  // 4. Rate limiting
  if (status === 429 || msgLower.includes('rate limit') || msgLower.includes('too many requests')) {
    return {
      errorType: ErrorType.RATE_LIMIT,
      userMessage: '‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ.',
      suggestions: [
        '–ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç',
        '–£–º–µ–Ω—å—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤',
        requestCount && requestCount > 2 ? `–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ ${Math.max(1, Math.floor(requestCount/2))}` : null
      ].filter(Boolean) as string[],
      retryable: true,
      originalStatus: status,
      originalMessage
    };
  }
  
  // 5. –ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤
  if (isServerOverloadError(status, msgLower)) {
    return {
      errorType: ErrorType.SERVER_OVERLOAD,
      userMessage: 'üñ•Ô∏è –°–µ—Ä–≤–µ—Ä—ã Vertex AI –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      suggestions: [
        '–ü–æ–¥–æ–∂–¥–∏—Ç–µ 5-10 –º–∏–Ω—É—Ç',
        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Ä–µ–≥–∏–æ–Ω (us-east1, europe-west1)',
        requestCount && requestCount > 1 ? '–£–º–µ–Ω—å—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π' : null
      ].filter(Boolean) as string[],
      retryable: true,
      originalStatus: status,
      originalMessage
    };
  }
  
  // 6. –ì–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
  if (msgLower.includes('country') && msgLower.includes('not supported') || 
      msgLower.includes('location') && msgLower.includes('not supported') ||
      msgLower.includes('region') && msgLower.includes('not supported')) {
    return {
      errorType: ErrorType.GEO_RESTRICTION,
      userMessage: 'üåç –ì–µ–æ-–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ. –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ –≤–∞—à–µ–º —Ä–µ–≥–∏–æ–Ω–µ.',
      suggestions: [
        '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ VPN (–°–®–ê –∏–ª–∏ –ï–≤—Ä–æ–ø–∞)',
        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å',
        '–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É'
      ],
      retryable: false,
      originalStatus: status,
      originalMessage
    };
  }
  
  // 7. –¢–∞–π–º–∞—É—Ç—ã
  if (status === 408 || msgLower.includes('timeout') || msgLower.includes('time out')) {
    return {
      errorType: ErrorType.TIMEOUT,
      userMessage: '‚è±Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞.',
      suggestions: [
        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑',
        requestCount && requestCount > 2 ? `–£–º–µ–Ω—å—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ ${Math.max(1, Math.floor(requestCount/2))}` : null,
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ'
      ].filter(Boolean) as string[],
      retryable: true,
      originalStatus: status,
      originalMessage
    };
  }
  
  // 8. –°–∏—Å—Ç–µ–º–Ω—ã–µ –æ—à–∏–±–∫–∏
  if (status >= 500 && status < 600) {
    return {
      errorType: ErrorType.SYSTEM_ERROR,
      userMessage: '‚ö†Ô∏è –°–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ Vertex AI.',
      suggestions: [
        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç',
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å Google Cloud',
        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Ä–µ–≥–∏–æ–Ω'
      ],
      retryable: true,
      originalStatus: status,
      originalMessage
    };
  }
  
  // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞
  return {
    errorType: ErrorType.UNKNOWN_ERROR,
    userMessage: `‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ Vertex AI: ${originalMessage}`,
    suggestions: [
      '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑',
      '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–æ–º–ø—Ç –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å',
      '–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø–æ–¥–¥–µ—Ä–∂–∫–µ Google Cloud'
    ],
    retryable: true,
    originalStatus: status,
    originalMessage
  };
}

/**
 * –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: –∞–ª–∏–∞—Å –¥–ª—è analyzeVertexAIError
 */
export function analyzeOpenRouterError(error: any, requestCount?: number): ErrorAnalysisResult {
  return analyzeVertexAIError(error, requestCount);
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–Ω–æ–π —Å —Ü–µ–Ω–∑—É—Ä–æ–π/–º–æ–¥–µ—Ä–∞—Ü–∏–µ–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 */
function isCensorshipError(status: number, message: string, errorCode?: string, errorType?: string): boolean {
  // HTTP —Å—Ç–∞—Ç—É—Å—ã, —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–ª—è —Ü–µ–Ω–∑—É—Ä—ã
  if (status === 422 || status === 400) {
    // –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞, —É–∫–∞–∑—ã–≤–∞—é—â–∏–µ –Ω–∞ —Ü–µ–Ω–∑—É—Ä—É
    const censorshipKeywords = [
      'content policy',
      'policy violation',
      'unsafe content',
      'inappropriate content',
      'content filter',
      'content blocked',
      'content rejected',
      'moderation',
      'safety filter',
      'content safety',
      'violates our',
      'against our policy',
      'content guidelines',
      'safety guidelines',
      'harmful content',
      'inappropriate request',
      'content not allowed',
      'prohibited content',
      'content violation',
      'safety violation'
    ];
    
    if (censorshipKeywords.some(keyword => message.includes(keyword))) {
      return true;
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥—ã –æ—à–∏–±–æ–∫
  if (errorCode && typeof errorCode === 'string') {
    const censorshipCodes = [
      'content_policy_violation',
      'safety_violation',
      'content_filtered',
      'inappropriate_content'
    ];
    if (censorshipCodes.includes(errorCode.toLowerCase())) {
      return true;
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –æ—à–∏–±–æ–∫
  if (errorType && typeof errorType === 'string') {
    const censorshipTypes = [
      'content_policy_violation',
      'safety_filter',
      'content_filter'
    ];
    if (censorshipTypes.includes(errorType.toLowerCase())) {
      return true;
    }
  }
  
  return false;
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–Ω–æ–π —Å –ø–µ—Ä–µ–≥—Ä—É–∑–∫–æ–π —Å–µ—Ä–≤–µ—Ä–æ–≤
 */
function isServerOverloadError(status: number, message: string): boolean {
  if (status === 502 || status === 503 || status === 504) {
    return true;
  }
  
  const overloadKeywords = [
    'server overload',
    'too many concurrent',
    'service unavailable',
    'capacity exceeded',
    'temporarily unavailable',
    'server busy',
    'high demand',
    'resource limit',
    'queue full',
    'processing limit'
  ];
  
  return overloadKeywords.some(keyword => message.includes(keyword));
}
